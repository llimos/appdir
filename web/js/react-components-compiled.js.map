{"version":3,"sources":["react-components.jsx"],"names":[],"mappings":"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","file":"react-components-compiled.js","sourcesContent":["(function (window, React, Routing) {\n    'use strict';\n    \n    var AppCard = (props)=>\n        <div className=\"col-md-4\">\n            <a href={Routing.generate('app', {id: props.app.id})}>\n                <div className=\"card\">\n                    <div className=\"card-block\">\n                        <h4 className=\"card-title\">{props.app.name}</h4>\n                        <p className=\"card-text\">{props.app.info}</p>\n                    </div>\n                    <div className=\"card-block\">\n                        <h5>{props.app.deployments.length} deployments</h5>\n                    </div>\n                </div>\n            </a>\n        </div>\n    ;\n    \n    var AppList = (props)=>\n        <div className=\"row\">\n            {props.apps.map((a) => <AppCard app={a} key={a.id}/>)}\n        </div>\n    ;\n\n    var ServerCard = (props)=>\n        <div className=\"col-md-4\">\n            <a href={Routing.generate('server', {id: props.server.id})}>\n                <div className=\"card\">\n                    <div className=\"card-block\">\n                        <h4 className=\"card-title\">{props.server.name} <small className=\"text-muted\">{props.server.ip}</small></h4>\n                        <p className=\"card-text\">{props.server.info}</p>\n                    </div>\n                    <div className=\"card-block\">\n                        <h5>{props.server.deployments.length} deployments</h5>\n                    </div>\n                </div>\n            </a>\n        </div>\n    ;\n\n    var ServerList = (props)=>\n        <div className=\"row\">\n            {props.servers.map((s) => <ServerCard server={s} key={s.id}/>)}\n        </div>\n    ;\n        \n    var ServerInfo = (props)=>\n        <div>\n            <p>{props.server.info}</p>\n            <h1>\n                Deployments\n            </h1>\n            <div>\n                {props.server.deployments.map((d)=><DeploymentCard key={d.id} deployment={d}/>)}\n            </div>\n        </div>\n    ;\n    \n    var AppInfo = (props)=>\n        <TabSet useHash={true} activeTab={props.activeTab}>\n            <TabContent name=\"deployments\" title=\"Deployments\">\n                <h1 className=\"m-b-1\">\n                    Deployments\n                    <button type=\"button\" className=\"btn btn-primary pull-md-right\">+</button>\n                </h1>\n                <div>\n                    {props.app.deployments.map((d)=><DeploymentCard key={d.id} deployment={d}/>)}\n                </div>\n            </TabContent>\n            <TabContent name=\"connections\" title=\"Connections\">\n                <h1 className=\"m-b-1\">\n                    Connections\n                    <button type=\"button\" className=\"btn btn-primary pull-md-right\">+</button>\n                </h1>\n                <h3 className=\"m-t-1\">Outgoing</h3>\n                <div>\n                    {props.app.connections.length ? \n                    props.app.connections.map((c)=><ConnectionCard key={c.id} connection={c}/>)\n                    : <h6 className=\"text-muted\">No outgoing connections defined</h6>}\n                </div>\n                <h3 className=\"m-t-1\">Incoming</h3>\n                <div>\n                    {props.app.inbound_connections.length ? \n                    props.app.inbound_connections.map((c)=><ConnectionCard key={c.id} connection={c}/>)\n                    : <h6 className=\"text-muted\">No incoming connections defined</h6>}\n                </div>\n            </TabContent>\n        </TabSet>\n    ;\n        \n    var TabSet = React.createClass({\n        getDefaultProps() {\n            return {\n                useHash: false,\n                activeTab: null\n            };\n        },\n        \n        onSwitch(event) {\n            // Update the hash if necessary\n            if (this.props.useHash) {\n                var scrollmem = $('body').scrollTop();\n                window.location.hash = event.target.getAttribute('href').substring(1);\n                $('html,body').scrollTop(scrollmem);\n            }\n        },\n        \n        render() {\n            var activeTab = null;\n            if (!activeTab && this.props.activeTab) {\n                // Look for default one passed in\n                activeTab = React.Children.toArray(this.props.children).find((tab)=>tab.props.name == this.props.activeTab);\n            }\n            if (!activeTab) {\n                // Use the first one\n                activeTab = React.Children.toArray(this.props.children).shift();\n            }\n            \n            var active = activeTab ? activeTab.props.name : null;\n            \n            return (\n                <div>\n                    <ul className=\"nav nav-tabs\" role=\"tablist\">\n                        {this.props.children.map((t)=>(\n                        <li className=\"nav-item\" key={t.props.name}>\n                            {/* We only handle the switching if useHash is false; otherwise we use URL routing */}\n                            <a className={\"nav-link\" + (active == t.props.name ? \" active\" : \"\")} href={\"#\"+t.props.name} data-toggle={this.props.useHash?undefined:\"tab\"} role=\"tab\">{t.props.title}</a>\n                        </li>))}\n                    </ul>\n                    \n                    <div className=\"tab-content p-t-2\">\n                        {this.props.children.map((t)=><div key={t.props.name} className={\"tab-pane\" + (active == t.props.name ? \" active\" : \"\")} id={t.props.name} role=\"tabpanel\">{t}</div>)}\n                    </div>\n                </div>\n            );\n        }\n    });\n    \n    var TabContent = (props)=> <div>{props.children}</div>;\n        \n    var DeploymentCard = React.createClass({\n        envClass: {\n            'prod': 'danger',\n            'staging': 'warning',\n            'qa': 'primary',\n            'dev': 'info'\n        },\n        \n        render() {\n            // Put together connection info\n            var deployment = this.props.deployment;\n            var outgoing = deployment.app.connections.map((c)=> ({\n                app: c,\n                dep: deployment.connections.find(test => test.connection === c)\n            }));\n            var incoming = deployment.inbound_connections.map((c)=> ({\n                app: c.connection,\n                dep: c\n            }));\n            \n            return (\n                <div className=\"card\" id={\"deployment-\" + this.props.deployment.id}>\n                    <h5 className=\"card-header\"><a href={Routing.generate('app', {id: this.props.deployment.app.id})}>{this.props.deployment.app.name}</a></h5>\n                    <div className=\"card-block\">\n                        <h3>\n                            <span className={\"label label-\"+this.envClass[this.props.deployment.env]}>{this.props.deployment.env.toUpperCase()}</span>\n                            <span className=\"m-x-1\">{this.props.deployment.name}</span>\n                            <div className=\"btn-group m-x-1\">\n                            {this.props.deployment.servers.map((s)=><a className=\"btn btn-info-outline\" key={s.id} href={Routing.generate('server', {id: s.id})}>{s.name}</a> )}\n                            </div>\n                            <div className=\"btn-group-vertical pull-md-right\" role=\"group\">\n                                <button type=\"button\" className=\"btn btn-primary-outline\">Edit</button> \n                                <button type=\"button\" className=\"btn btn-danger-outline\">Delete</button>\n                            </div>\n                        </h3>\n                        <p>{this.props.deployment.info}</p>\n                        <h5 className=\"card-title\"><a data-toggle=\"collapse\" data-target={\"#d\"+this.props.deployment.id+\"-connections\"}>Connections</a></h5>\n                        <div className=\"collapse m-t-2\" id={\"d\"+this.props.deployment.id+\"-connections\"}>\n                        \n                            <h5>Outbound</h5>\n                            {outgoing.length ?\n                            <table className=\"table\">\n                                <thead><tr>\n                                    <th>Connection</th>\n                                    <th>Deployment</th>\n                                    <th>Info</th>\n                                    <th/>\n                                </tr></thead>\n                                <tbody>\n                                    {outgoing.map(c =>\n                                        <tr key={c.app.id}>\n                                            <td>{c.app.name} (<a href={Routing.generate('app', {id: c.app.server_app.id})}>{c.app.server_app.name}</a>)</td>\n                                            <td>{c.dep ? <span><a href={Routing.generate('app', {id: c.dep.server_deployment.app.id})+\"#deployment-\"+c.dep.server_deployment.id}>{c.dep.server_deployment.name}</a> <div className=\"btn-group\">{c.dep.server_deployment.servers.map(s=><a className=\"btn btn-sm btn-info-outline\" key={s.id} href={Routing.generate('server', {id: s.id})}>{s.name}</a>)}</div></span> : null}</td>\n                                            <td>{c.dep ? c.dep.info : null}</td>\n                                            <td><button type=\"button\" className=\"btn btn-primary btn-sm\">Edit</button> </td>\n                                        </tr>\n                                    )}\n                                </tbody>\n                            </table>\n                            :<span className=\"text-muted\">No connections</span>}\n                            \n                            <h5 className=\"m-t-1\">Inbound</h5>\n                            {incoming.length ?\n                            <table className=\"table\">\n                                <thead><tr>\n                                    <th>Connection</th>\n                                    <th>Deployment</th>\n                                    <th>Info</th>\n                                </tr></thead>\n                                <tbody>\n                                    {incoming.map(c =>\n                                        <tr key={c.dep.id}>\n                                            <td>{c.app.name} (<a href={Routing.generate('app', {id: c.app.client_app.id})}>{c.app.client_app.name}</a>)</td>\n                                            <td>{c.dep ? <span><a href={Routing.generate('app', {id: c.dep.client_deployment.app.id}) +\"#deployment-\"+c.dep.client_deployment.id}>{c.dep.client_deployment.name}</a> <div className=\"btn-group\">{c.dep.client_deployment.servers.map(s=><a className=\"btn btn-sm btn-info-outline\" key={s.id} href={Routing.generate('server', {id: s.id})}>{s.name}</a>)}</div></span> : null}</td>\n                                            <td>{c.dep ? c.dep.info : null}</td>\n                                        </tr>\n                                    )}\n                                </tbody>\n                            </table>\n                            :<span className=\"text-muted\">No connections</span>}\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n    });\n    \n    var ConnectionCard = (props)=>\n        <div className=\"card\">\n            <h5 className=\"card-header\">{props.connection.name}</h5>\n            <div className=\"card-block\">\n                <div className=\"btn-group-vertical pull-md-right\" role=\"group\">\n                    <button type=\"button\" className=\"btn btn-primary-outline\">Edit</button> \n                    <button type=\"button\" className=\"btn btn-danger-outline\">Delete</button>\n                </div>\n                <h3 className=\"card-title\">\n                    <span className=\"label label-default m-r-1\">{props.connection.client_app.type}</span><a href={Routing.generate('app', {id: props.connection.client_app.id})+\"#connections\"}>{props.connection.client_app.name}</a> {\"\\u2192\"} <a href={Routing.generate('app', {id: props.connection.server_app.id})+\"#connections\"}>{props.connection.server_app.name}</a><span className=\"label label-default m-l-1\">{props.connection.server_app.type}</span>\n                </h3>\n                <p>{props.connection.info}</p>\n            </div>\n        </div>\n    ;\n    \n    var PageHeader = (props)=>\n        <div>\n            <h1 className=\"display-4\">\n                {props.title} {props.label ? <span className=\"label label-default\">{props.label}</span> : null}\n                {props.button ?\n                <button type=\"button\" onClick={props.button} className=\"btn btn-primary-outline btn-lg pull-md-right\">{props.buttonText ? props.buttonText : 'Edit info'}</button>\n                : null}\n            </h1>\n            <h3 className=\"text-muted\">{props.subtitle}</h3>\n            {props.children}\n        </div>\n    ;\n    \n    var NavBar = class NavBar extends React.Component {\n        constructor() {\n            super();\n            this.defaultProps = {active : null};\n            \n             var items = {\n                'Servers': Routing.generate('server'),\n                'Apps': Routing.generate('app')\n             };\n        \n            this.render = function() {\n                return (\n                    <nav className=\"navbar navbar-dark navbar-full bg-info\">\n                        <a className=\"navbar-brand\" href={Routing.generate('single-page')}><img src=\"/connections.png\" height=\"32\" style={{display:\"inline-block\"}}/> <strong style={{color:\"black\"}}>Application Directory</strong></a>\n                        <ul className=\"nav navbar-nav\">\n                            {Object.keys(items).map((item)=>\n                                <li key={item} className={\"nav-item\" + (this.props.active == item ? \" active\" : \"\")}>\n                                    <a className=\"nav-link\" href={items[item]}>{item}</a>\n                                </li>\n                            )}\n                        </ul>\n                    </nav>\n                );\n            };\n        };\n    };\n    \n    var Homepage = (props)=>\n        <div>\n            <h1 className=\"m-b-1\">How to use Application Directory</h1>\n            <p>An <strong>application</strong> can have multiple <strong>deployments</strong>, each of which can reside on zero or more <strong>servers</strong>.</p>\n            <p><strong>Applications</strong> can be defined as <em>internal</em>, <em>vendor</em> or <em>cloud</em>.</p>\n            <p><strong>Deployments</strong> can be defined as <em>prod</em>, <em>QA</em>, <em>staging</em> or <em>dev</em>.</p>\n            <p>An <strong>application connection</strong> defines when an <strong>application</strong> needs to connect to another <strong>application</strong>.</p>\n            <p>A <strong>deployment connection</strong> defines an instance of an <strong>application connection</strong>, describing <em>which</em> <strong>deployment</strong> of the client <strong>application</strong> connects to which <strong>deployment</strong> of the server <strong>application</strong>.</p>\n        </div>\n    ;\n    \n    var ModalDialog = class ModalDialog extends React.Component {\n        constructor(props) {\n            super(props);\n            this.state = {message: null};\n        }\n\n        open(callback){\n            if (callback) {\n                jQuery(this._dialog).on('shown.bs.modal', callback);\n            }\n            jQuery(this._dialog).modal('show');\n        }\n        \n        close(callback){\n            if (callback) {\n                jQuery(this._dialog).on('hidden.bs.modal', callback);\n            }\n            jQuery(this._dialog).modal('hide');\n        }\n        \n        componentDidMount(){\n            this.open();\n        }\n        \n        componentDidUpdate(){\n            this.open();\n        }\n        \n        handleSubmit(event){\n            event.preventDefault();\n            var form = event.target;\n            var formdata = new FormData(form);\n            var data = {};\n            for (var entry of formdata.keys()) {\n                data[entry] = formdata.get(entry);\n            }\n            this.props.onSave(data);\n        }\n        \n        render() {\n            var close = this.close.bind(this);\n            var handleSubmit = this.handleSubmit.bind(this);\n            return (\n                <div id=\"modal\" className=\"modal fade\" ref={(d)=>this._dialog=d}>\n                    <div className=\"modal-dialog\" role=\"document\">\n                        <div className=\"modal-content\">\n                            <div className=\"modal-header\">\n                                <button type=\"button\" className=\"close\" onClick={close} aria-label=\"Close\">\n                                    <span aria-hidden=\"true\">&times;</span>\n                                </button>\n                                <h4 className=\"modal-title\">{this.props.title}</h4>\n                            </div>\n                            <div className=\"modal-body\">\n                                {this.state.message ? <Alert type=\"danger\">{this.state.message}</Alert>:''}\n                                {this.props.children}\n                            </div>\n                            <div className=\"modal-footer\">\n                                <button type=\"button\" className=\"btn btn-secondary\" onClick={close}>Close</button>\n                                <input type=\"submit\" className=\"btn btn-primary\" value=\"Save\" onClick=\"\"/>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n    };\n    \n    var AppForm = class AppForm extends React.Component {\n        handleSubmit(event){\n            event.preventDefault();\n            var form = event.target;\n            var formdata = new FormData(form);\n            var data = {};\n            for (var entry of formdata.keys()) {\n                data[entry] = formdata.get(entry);\n            }\n            this.props.onSave(data);\n        }\n\n        render() {\n            let handleSubmit = this.handleSubmit.bind(this);\n            let app = this.props.app;\n            return (\n                <form onSubmit={handleSubmit}>\n                    <FormInput name=\"name\"  value={app.name} formName=\"app\" label=\"Name\"/>\n                    <FormSelect name=\"type\" value={app.type} formName=\"app\" label=\"Type\" options={{internal: \"Internal\", vendor: \"Vendor\", cloud: \"Cloud\", wrong: \"Invalid\"}}/>\n                    <FormInput name=\"info\" value={app.info} formName=\"app\" label=\"Extra info\"/>\n                </form>\n            )\n        }\n    };\n\n    var FormInput = class FormInput extends React.Component {\n        value: thi\n        render() {\n            var props = this.props;\n            var id = props.formName+'-'+props.name;\n            return (\n                <fieldset className=\"form-group\">\n                    <label labelFor={id}>{props.label}</label>\n                    <input type={props.type} className=\"form-control\" name={name} id={id} defaultValue={this.props.value}/>\n                </fieldset>\n            );\n        }\n    };\n    FormInput.defaultProps = {type: \"text\", value: null};\n\n    var FormSelect = class FormSelect extends React.Component {\n        render() {\n            var props = this.props;\n            var id = props.formName + '-' + props.name;\n            return (\n                <fieldset className=\"form-group\">\n                    <label labelFor={id}>{props.label}</label>\n                    <select className=\"form-control\" name={name} id={id}>\n                        {Object.keys(props.options).map((value) => (\n                            <option key={value} value={value}>{props.options[value]}</option>))}\n                    </select>\n                </fieldset>\n            );\n        }\n    };\n    \n    var Alert = (props)=>(\n        <div className={\"alert alert-dismissable fade in alert-\" + props.type} role=\"alert\">\n            <button type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button>\n            {props.children}\n        </div> \n    );\n    \n    // Export the ones needed outside\n    window.Homepage = Homepage;\n    window.AppList = AppList;\n    window.ServerList = ServerList;\n    window.AppInfo = AppInfo;\n    window.ServerInfo = ServerInfo;\n    window.NavBar = NavBar;\n    window.PageHeader = PageHeader;\n    window.AppForm = AppForm;\n    window.ModalDialog = ModalDialog;\n    window.Alert = Alert;\n})(window, React, Routing);"]}